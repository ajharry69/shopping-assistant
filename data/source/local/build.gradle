apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin' // apply below kotlin-kapt

android {
    compileSdkVersion sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "int", "DATABASE_VERSION", (project.findProperty('DB_VERSION') ?: 1)
        buildConfigField "String", "DATABASE_NAME", '"' + (project.findProperty('DB_NAME') ?: xently.db) + '"'

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/db/schemas/")
                arg("room.incremental", "true")
                arg("room.expandProjection", "true")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = jvm_target_version
            freeCompilerArgs += [
                    "-Xuse-experimental=kotlin.Experimental",
                    '-Xopt-in=kotlin.time.ExperimentalTime',
                    '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        def srcDir = 'src/sharedTest/java'
        test {
            java.srcDirs += srcDir
        }
        androidTest {
            java.srcDirs += srcDir
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true // required to not break unit tests
        }
    }
}

dependencies {
    api project(path: ':data:source:common')
    implementation project(path: ':common')
    implementation project(path: ':data:models')

    // Hilt-DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"

    // Preferences DataStore
    api "androidx.datastore:datastore-preferences:$datastore_version"

    // Proto DataStore
    api "androidx.datastore:datastore-core:$datastore_version"
    api 'com.google.protobuf:protobuf-javalite:3.14.0'

    // Room
    kapt "androidx.room:room-compiler:$room_version"

    testImplementation project(path: ':tests:unit')
}