apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = jvm_target_version
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'win32-x86-64/attach_hotspot_windows.dll'
        pickFirst 'win32-x86/attach_hotspot_windows.dll'
        pickFirst 'META-INF/licenses/ASM'
        pickFirst 'META-INF/AL2.0'
        pickFirst 'META-INF/LGPL2.1'
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "androidx.core:core-ktx:$core_ktx_version"
    api "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    api "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"
    api "com.google.android.material:material:$material_version"
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.multidex:multidex:$multidex_version"
    api "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    api 'androidx.fragment:fragment-ktx:1.3.0-beta01'

    // Navigation
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Hilt-DI
    api "com.google.dagger:hilt-android:$hilt_version"
    api "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_jetpack_version"
    api "androidx.hilt:hilt-work:$hilt_jetpack_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"

    // Jetpack Security
    api "androidx.security:security-crypto:1.1.0-alpha02"

    // Room
    api "androidx.room:room-ktx:$room_version"
    api "androidx.room:room-runtime:$room_version"

    // Workmanager + coroutines
    api "androidx.work:work-runtime-ktx:$work_version"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Lifecycle
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Navigation
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Square and Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    api "com.squareup.okio:okio:$okio_version"
    debugApi 'com.squareup.leakcanary:leakcanary-android:2.4'

    // Glide
    api "com.github.bumptech.glide:glide:$glide_version"

    // Utilities & Others
    api 'de.hdodenhof:circleimageview:3.1.0'
    api project(path: ':utilities:ui')
    api project(path: ':utilities:viewext')

    // Tests
    api "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}